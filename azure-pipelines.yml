# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  repositories:
  - repository: self
    type: git
    ref: master
jobs:
- job: Run_Tests
  displayName: Run Tosca tests
  pool: Self-hosted Tosca
  steps:
  - checkout: self
  - task: PowerShell@2
    displayName: Run ToscaCIClient with PowerShell
    inputs:
      targetType: inline
      script: |
        Write-Host "[Debug]: Running in folder:" $(pwd);
        Write-Host "[Debug]: DefaultWorkingDirectory is: " $(System.DefaultWorkingDirectory);
        
        #$CIClientCmd="C:\ado-agent\ToscaCI\Client\ToscaCIClient.exe";
        #$params=" -m distributed -t junit -x True -r results.xml -c conf-execution-list.xml -e http://toscademovm:90/DistributionServerService/ManagerService.svc";
        #$command="$CIClientCmd $params";
        #Invoke-Expression -Command $command;

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        $url = 'https://pulse-7.qtestnet.com/webhook/c3fe0169-a106-42e8-b7d9-06ee0cd924a1'
        $content = (Get-Content results.xml -Raw)
        $bytes = [System.Text.Encoding]::ASCII.GetBytes($content)
        $payload = [System.Convert]::ToBase64String($bytes)

        $body = @{
          'projectId' = 105466
          'testcycle' = 2193247
          'result' = $payload
        }
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Invoke-RestMethod -Body $body -Method 'Post' -Uri $url

  - task: PublishTestResults@2
    condition: always()
    displayName: Publish Test Results **/results*.xml
    inputs:
      testResultsFiles: '**/results*.xml'
...

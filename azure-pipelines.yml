# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  repositories:
  - repository: self
    type: git
    ref: master

jobs:
- job: Build_Application
  displayName: Build Tricentis Insurance Quoting Application
  pool:
    name: Self-hosted Tosca
  steps:
    - script: echo Building now...

- job: Deploy_Application
  displayName: Deploy application do Docker
  pool:
    name: Self-hosted Tosca
  steps:
    - script: echo set environment...
    - script: echo depoly to container...
  dependsOn: Build_Application

- job: Run_Tests
  displayName: Run Tosca tests
  dependsOn: Deploy_Application
  variables:
    fileName: 'results.xml'
    resultaFolder: '.\results'

  pool:
    name: Self-hosted Tosca
  steps:
  - checkout: self

  #Create results folder if doesn't exist
  - task: PowerShell@2
    name: SetResultsFolder
    inputs:
      targetType: 'inline'
      script: |
        if (!(Test-Path '.\results')) {New-Item '.\results' -ItemType Directory}

  #Run Tosca test(s) via ToscaCIClient
  - task: PowerShell@2
    name: RunToscaTests
    displayName: Run Tosca test(s) via ToscaCIClient
    inputs:
      targetType: 'filePath'
      #filePath: $(System.DefaultWorkingDirectory)\tests\run-tosca-test.ps1
      filePath: $(System.DefaultWorkingDirectory)\tests\aos-api\tosca_execution_client.ps1
      arguments: >
        -toscaServerUrl "http://localhost"
        -eventsConfigFilePath "tests\testEvents.json"
        -projectName "NEW_DEX_WS"
        -creator "Shahar Shiff"
        -resultsFileName 'results.xml'
        -resultaFolder '.\results'
        -debug "true"
  #      -resultsFile "results\results.xml"
  #      -executionListFile "tests\conf-execution-list.xml"
  #      -toscaServer "http://toscademovm:5007"

  #Publish results to qTest
#  - task: PowerShell@2
#    displayName: Publish results to qTest
#    condition: always()
#    inputs:
#      targetType: 'filePath'
#      filePath: $(System.DefaultWorkingDirectory)\tests\publish-results-to-qtest.ps1
#      arguments: >
#        -projectId "105466"
#        -testCycle "2193247"
#        -uploadResultsFile "$(System.DefaultWorkingDirectory)\results\*_results.xml"

  #Export PDF Report
  #- task: PowerShell@2
  #  displayName: Export PDF Report
    #condition: always()
    #inputs:
      #targetType: 'filePath'
      #filePath: $(System.DefaultWorkingDirectory)\tests\export-pdf-report.ps1

  #Publish Test Results
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'results\results.xml'
      testRunTitle: 'Publish JUNIT test results'

- job: Deploy_to_Staging
  displayName: Deploy to the staging env
  pool:
    name: Self-hosted Tosca
  steps:
    - script: echo Deploying to staging now...
  dependsOn: Run_Tests
